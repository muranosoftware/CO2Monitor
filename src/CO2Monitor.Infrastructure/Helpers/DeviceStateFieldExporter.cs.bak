using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Newtonsoft.Json.Linq;
using CO2Monitor.Core.Entities;
using CO2Monitor.Core.Interfaces.Services;

namespace CO2Monitor.Infrastructure.Helpers
{
	public static class DeviceStateFieldExporter
	{
		public static IEnumerable <TimeSeriesPoint> GetFloatFieldValues(IEnumerable<DeviceStateMeasurement> measurements, string field)
		{
			foreach(var m in measurements)
			{
				var json =  JObject.Parse(m.State);
				if (json.ContainsKey(field))
					yield return new TimeSeriesPoint(m.Time, json.Property(field).ToObject<double>());
			}
		}

		public static IEnumerable<TimeSeriesPoint> GetEnumFieldValues(IEnumerable<DeviceStateMeasurement> measurements, string field, IReadOnlyList<string> enumValues)
		{
			Dictionary<string, double> indexes = new Dictionary<string, double>();

			for (int i = 0; i < enumValues.Count; i++)
				indexes.Add(enumValues[i], i);
			indexes.Add("", -1);

			foreach (var m in measurements)
			{
				var json = JObject.Parse(m.State);
				if (json.ContainsKey(field))
					yield return new TimeSeriesPoint(m.Time, indexes[json.Property(field).ToObject<string>()]);
			}
		}
	}
}
